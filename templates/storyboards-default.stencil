// Generated using SwiftGen, by O.Halligon â€” https://github.com/AliSoftware/SwiftGen

import Foundation
import UIKit

{# This first part of the code is static, same every time whatever Storyboard you have #}
protocol StoryboardScene {
  static var storyboardName : String { get }
}

extension StoryboardScene {
  static func storyboard() -> UIStoryboard {
    return UIStoryboard(name: self.storyboardName, bundle: nil)
  }

  static func initialViewController() -> UIViewController {
    return storyboard().instantiateInitialViewController()!
  }
}

extension StoryboardScene where Self: RawRepresentable, Self.RawValue == String {
  func viewController() -> UIViewController {
    return Self.storyboard().instantiateViewControllerWithIdentifier(self.rawValue)
  }
  static func viewController(identifier: Self) -> UIViewController {
    return identifier.viewController()
  }
}

protocol StoryboardSegue : RawRepresentable { }
protocol StoryboardCell : RawRepresentable { }

extension UIViewController {
  func performSegue<S : StoryboardSegue where S.RawValue == String>(segue: S, sender: AnyObject? = nil) {
    performSegueWithIdentifier(segue.rawValue, sender: sender)
  }
}

extension UICollectionView {
  func dequeueReusableCellWithReuseIdentifier<C : StoryboardCell where C.RawValue == String>(identifier: C,
      forIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {
    return dequeueReusableCellWithReuseIdentifier(identifier.rawValue, forIndexPath: indexPath)
  }
}

{# This is where the generation begins, this code depends on what you have in your Storyboards #}
{% if storyboards %}
extension UIStoryboard {
  struct {{sceneEnumName}} {
    {% for storyboard in storyboards %}
    {% set storyboardName %}{{storyboard.name|swiftIdentifier}}{% endset %}
    {% if storyboard.scenes %}
    enum {{storyboardName}} : String, StoryboardScene {
      static let storyboardName = "{{storyboard.name}}"
      {% for scene in storyboard.scenes %}
      {% set sceneID %}{{scene.identifier|swiftIdentifier}}{% endset %}

      case {{sceneID}} = "{{scene.identifier}}"
      {% if scene.class %}
      static func {{sceneID|snakeToCamelCase|lowerFirstWord}}ViewController() -> {{scene.class}} {
        return {{storyboardName}}.{{sceneID}}.viewController() as! {{scene.class}}
      }
      {% else %}
      static func {{sceneID|snakeToCamelCase|lowerFirstWord}}ViewController() -> UIViewController {
        return {{storyboardName}}.{{sceneID}}.viewController()
      }
      {% endif %}
      {% endfor %}
    }
    {% else %}
    enum {{storyboardName}} : StoryboardScene {
      static let storyboardName = "{{storyboard.name}}"
    }
    {% endif %}
    {% endfor %}
  }

  struct {{segueEnumName}} {
    {% for storyboard in storyboards %}{% if storyboard.segues %}
    enum {{storyboard.name|swiftIdentifier}} : String, StoryboardSegue {
      {% for segue in storyboard.segues %}
      case {{segue.identifier|swiftIdentifier}} = "{{segue.identifier}}"
      {% endfor %}
    }
    {% endif %}{% endfor %}
  }

  struct {{cellEnumName}} {
    {% for storyboard in storyboards %}{% if storyboard.cells %}
    enum {{storyboard.name|swiftIdentifier}} : String, StoryboardCell {
      {% for cell in storyboard.cells %}
      case {{cell.identifier|swiftIdentifier}} = "{{cell.identifier}}"
      {% endfor %}
    }
    {% endif %}{% endfor %}
  }
}
{% else %}
// No storyboard found
{% endif %}
