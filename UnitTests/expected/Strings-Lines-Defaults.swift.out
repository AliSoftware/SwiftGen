// Generated using SwiftGen, by O.Halligon â€” https://github.com/AliSoftware/SwiftGen

import Foundation

protocol Localizable: CustomStringConvertible {
  static var tableName: String { get }
  var localized: String { get }
}

extension Localizable {
  var description: String { get { return self.localized } }
}

struct L10n {
  static func tr(table: String, _ key: String, _ params: CVarArgType...) -> String {
    let format = NSLocalizedString(key, tableName: table, comment: "")
    return params.count == 0 ? format : String(format: format, args: params)
  }

  enum LocalizableTable: Localizable {
    static let tableName = "Localizable"

    /// My awesome title
    case AppTitle
    /// My name is %@, I am %d
    case GreetingsAndAge(String, Int)

    var localized: String {
      switch self {
        case .AppTitle:
        return L10n.tr(LocalizableTable.tableName, "AppTitle")
        case .GreetingsAndAge(let p0, let p1):
        return L10n.tr(LocalizableTable.tableName, "GreetingsAndAge", p0, p1)
      }
    }
  }
}

func tr(key: Localizable) -> String { return key.localized }
func tr(key: L10n.LocalizableTable) -> String { return key.localized }
