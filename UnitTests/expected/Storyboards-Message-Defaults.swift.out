// Generated using SwiftGen, by O.Halligon â€” https://github.com/AliSoftware/SwiftGen

import Foundation
import UIKit

protocol StoryboardScene : RawRepresentable {
  static var storyboardName : String { get }
  static func storyboard() -> UIStoryboard
  static func initialViewController() -> UIViewController
  func viewController() -> UIViewController
  static func viewController(identifier: Self) -> UIViewController
}

extension StoryboardScene where Self.RawValue == String {
  static func storyboard() -> UIStoryboard {
    return UIStoryboard(name: self.storyboardName, bundle: nil)
  }

  static func initialViewController() -> UIViewController {
    return storyboard().instantiateInitialViewController()!
  }

  func viewController() -> UIViewController {
    return Self.storyboard().instantiateViewControllerWithIdentifier(self.rawValue)
  }
  static func viewController(identifier: Self) -> UIViewController {
    return identifier.viewController()
  }
}

extension UIStoryboard {
  struct Scene {
    enum Message : String, StoryboardScene {
      static let storyboardName = "Message"

      case composer = "Composer"
      static func composerViewController() -> UIViewController {
        return Message.composer.viewController()
      }

      case messagesList = "MessagesList"
      static func messagesListViewController() -> UITableViewController {
        return Message.messagesList.viewController() as! UITableViewController
      }

      case navCtrl = "NavCtrl"
      static func navCtrlViewController() -> UINavigationController {
        return Message.navCtrl.viewController() as! UINavigationController
      }

      case urlChooser = "URLChooser"
      static func urlChooserViewController() -> XXPickerViewController {
        return Message.urlChooser.viewController() as! XXPickerViewController
      }
    }
  }

  struct Segue {
    enum Message : String {
      case CustomBack = "CustomBack"
      case Embed = "Embed"
      case NonCustom = "NonCustom"
      case Show_NavCtrl = "Show-NavCtrl"
    }
  }
}
