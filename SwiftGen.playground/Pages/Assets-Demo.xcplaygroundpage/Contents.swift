import Foundation



//: #### SwiftGenAssetsEnumBuilder Usage Example

let enumBuilder = SwiftGenAssetsEnumBuilder()

enumBuilder.addAssetName("Green-Apple")
enumBuilder.addAssetName("Red-Apple")
enumBuilder.addAssetName("Banana")
enumBuilder.addAssetName("Big_Pear")
enumBuilder.addAssetName("stop.button.enabled")

print(enumBuilder.build())



//: #### Code Generated by the Builder

import UIKit

extension UIImage {
    enum Asset : String {
        case GreenApple = "Green-Apple"
        case RedApple = "Red-Apple"
        case Banana = "Banana"
        case BigPear = "Big_Pear"
        case StopButtonEnabled = "stop.button.enabled"
        
        var image: UIImage {
            return UIImage(named: self.rawValue)!
        }
    }
    
    convenience init?(asset: Asset) {
        self.init(named: asset.rawValue)
    }
}



//: #### Usage Example

let image = UIImage(asset: .GreenApple)

/* This line below crash in the Playground because the UIImage doesn't actually exist,
   but it a real project there is no reason for that image not to exist because
   the enum is supposed to be generated from the project's assets
   (except if the generated file goes out of sync with the Assets Catalog and you forgot to regenerate)
*/
//UIImage.Asset.Banana.image
